buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.7.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.researchgate.release'


group 'fr.datastores'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    hadoopUddVersion = '2.6.5.180-2'
    scalaBinaryVersion = "2.11"
    sparkVersion = "2.3.0"
    hbaseVersion = "1.1.3.${hadoopUddVersion}"
    phoenixVersion = "5.0.0-HBase-2.0"
    avroVersion = "1.8.2"
}


sourceSets.main.java.srcDirs "src/main/java"
sourceSets.main.scala.srcDir "src/main/scala"

dependencies {
    compile "org.apache.spark:spark-core_${scalaBinaryVersion}:${sparkVersion}"
    compile "org.apache.spark:spark-catalyst_${scalaBinaryVersion}:${sparkVersion}"
    compile "org.apache.spark:spark-sql_${scalaBinaryVersion}:${sparkVersion}"
    compile "org.apache.hbase:hbase-server:${hbaseVersion}"
    compile "org.apache.hbase:hbase-common:${hbaseVersion}"
    compile "org.apache.hbase:hbase-mapreduce:${hbaseVersion}"
    compile "org.apache.phoenix:phoenix-core:${phoenixVersion}"
    compile "org.apache.avro:avro:${avroVersion}"
    testCompile "org.scalatest:scalatest_${scalaBinaryVersion}:2.2.1"
    //testCompile "org.apache.hbase:hbase-testing-util:${hbaseVersion}"
}

configurations {
    all {
        resolutionStrategy {
            force 'com.fasterxml.jackson.core:jackson-core:2.6.7', 'com.fasterxml.jackson.core:jackson-databind:2.6.7', 'com.fasterxml.jackson.core:jackson-annotations:2.6.7'
        }
    }
}

configurations {
    provided
}

release {
    tagTemplate = '${name}-${version}'
    afterReleaseBuild.dependsOn uploadArchives
    git {
        requireBranch = ''
    }
}


//uploadArchives {
//    repositories {
//        mavenDeployer {
//            repository(url: "http://si-nexus-forge.edf.fr/nexus/content/repositories/projet-hadoop-udd-release") {
//                authentication(userName: mavenUser, password: mavenPassword)
//            }
//            snapshotRepository(url: 'http://si-nexus-forge.edf.fr/nexus/content/repositories/projet-hadoop-udd-snapshot') {
//                authentication(userName: mavenUser, password: mavenPassword)
//            }
//        }
//    }
//}


//uploadShadow {
//    repositories {
//        mavenDeployer {
//            repository(url: "http://si-nexus-forge.edf.fr/nexus/content/repositories/projet-hadoop-udd-release") {
//                authentication(userName: mavenUser, password: mavenPassword)
//            }
//            snapshotRepository(url: 'http://si-nexus-forge.edf.fr/nexus/content/repositories/projet-hadoop-udd-snapshot') {
//                authentication(userName: mavenUser, password: mavenPassword)
//            }
//        }
//    }
//}


jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }
}


shadowJar {
    classifier = 'jar-with-dependencies'
    zip64 true
    classifier 'jar-with-dependencies'
}


artifacts {
    archives shadowJar
}


task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn scalaTest

